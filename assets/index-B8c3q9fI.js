import{r as e,R as r,S as n,i as o,T as t,w as s,t as a,k as i,p as c}from"./index-CrryxQyl.js";import{u as l,B as d,S as p}from"./RenderTopNavBar-BTvx9fvK.js";var u;class h extends e.Component{constructor(...e){super(...e),this.ref=null,this.handleRef=e=>{const r=this.props.elementRef;this.ref=e,"function"==typeof r&&r(e)}}render(){return r.createElement(n,Object.assign({},this.props,{name:"IconSearch",viewBox:"0 0 1920 1920",elementRef:this.handleRef}),u||(u=r.createElement("path",{d:"M790.588 1468.235c-373.722 0-677.647-303.924-677.647-677.647 0-373.722 303.925-677.647 677.647-677.647 373.723 0 677.647 303.925 677.647 677.647 0 373.723-303.924 677.647-677.647 677.647Zm596.781-160.715c120.396-138.692 193.807-319.285 193.807-516.932C1581.176 354.748 1226.428 0 790.588 0S0 354.748 0 790.588s354.748 790.588 790.588 790.588c197.647 0 378.24-73.411 516.932-193.807l516.028 516.142 79.963-79.963-516.142-516.028Z",fillRule:"evenodd"})))}}h.glyphName="search",h.variant="Line",h.displayName="IconSearchLine",h.propTypes={...n.propTypes},h.allowedProps=[...n.allowedProps];const f={children:o.oneOfType([o.node,o.func]),renderIcon:o.oneOfType([o.node,o.func]),screenReaderLabel:o.string.isRequired,type:o.oneOf(["button","submit","reset"]),size:o.oneOf(["small","medium","large"]),elementRef:o.func,as:o.elementType,interaction:o.oneOf(["enabled","disabled","readonly"]),color:o.oneOf(["primary","primary-inverse","secondary","success","danger"]),focusColor:o.oneOf(["info","inverse"]),shape:o.oneOf(["rectangle","circle"]),withBackground:o.bool,withBorder:o.bool,margin:t.spacing,cursor:o.string,href:o.string,onClick:o.func},m=["children","renderIcon","screenReaderLabel","type","size","elementRef","as","interaction","color","focusColor","shape","withBackground","withBorder","margin","cursor","href"];var g,B;let y=s(null,l)(g=a()(((B=class extends e.Component{constructor(...e){super(...e),this._baseButton=null,this.ref=null,this.handleRef=e=>{const r=this.props.elementRef;this.ref=e,"function"==typeof r&&r(e)}}get focused(){return this._baseButton&&this._baseButton.focused}focus(){this._baseButton&&this._baseButton.focus()}render(){const e=this.props,n=e.children,o=e.renderIcon,t=e.screenReaderLabel,s=e.type,a=e.size;e.elementRef;const l=e.as,u=e.interaction,h=e.color,f=e.focusColor,g=e.shape,B=e.withBackground,y=e.withBorder,b=e.margin,R=e.cursor,w=e.href,O=i(e,m),v=this.props.themeOverride;return r.createElement(d,Object.assign({},c(O),{type:s,size:a,elementRef:this.handleRef,as:l,interaction:u,color:h,focusColor:f,shape:g,withBackground:B,withBorder:y,margin:b,cursor:R,href:w,renderIcon:n||o,themeOverride:v,ref:e=>{this._baseButton=e}}),r.createElement(p,null,t))}}).displayName="IconButton",B.componentId="IconButton",B.propTypes=f,B.allowedProps=["as","children","color","cursor","elementRef","focusColor","href","interaction","margin","renderIcon","screenReaderLabel","shape","size","type","withBackground","withBorder","onClick"],B.defaultProps={type:"button",size:"medium",as:"button",interaction:void 0,color:"secondary",shape:"rectangle",withBackground:!0,withBorder:!0,margin:"0",cursor:"pointer"},g=B))||g)||g;export{y as I,h as a};
